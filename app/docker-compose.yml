version: "3.9"

services:
  # WORKS kinda, init_db is not connecting  (Unhealthy)
  mariadb:
    container_name: $DB_NAME
    image: mariadb:10.6.4-focal
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: $ROOT_PASSWORD
      MYSQL_USER: client
      MYSQL_PASSWORD: clientPassword5!
    volumes:
      - '$DATA_DIR:/var/lib/mysql/'
    ports:
      - $DB_PORT:3306
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "$HOSTNAME", "--port", $DB_PORT, "-p$ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5

  # WORKS!!
  init_db:
    container_name: init_db
    environment:
      ROOT_USERNAME: $ROOT_USERNAME
      ROOT_PASSWORD: $ROOT_PASSWORD
      HOSTNAME: $HOSTNAME
      DB_PORT: $DB_PORT
    restart: "no"
    volumes:
        - './db:/db'
    build:
      context: .
      dockerfile: db/Dockerfile
    networks:
      - dev-network
    depends_on:
      mariadb:
        condition: service_healthy
    tty: true

  # BROKEN!!
  # server:
  #   container_name: $API_NAME
  #   restart: always
  #   environment:
  #     ROOT_USERNAME: $ROOT_USERNAME
  #     ROOT_PASSWORD: $ROOT_PASSWORD
  #     HOSTNAME: $HOSTNAME
  #     DB_PORT: $DB_PORT
  #     FLASK_DEBUG: $FLASK_DEBUG
  #     API_PORT: $API_PORT
  #   build:
  #     context: .
  #     dockerfile: server/Dockerfile
  #   volumes:
  #       - './client/public:/client/public'
  #   ports:
  #     - $API_PORT:5000
  #   networks:
  #     - dev-network
  #   depends_on:
  #     mariadb:
  #       condition: service_healthy
  #   tty: true

  # WORKS!!
  client:
    restart: always
    container_name: $CLIENT_NAME
    build:
      context: .
      dockerfile: client/Dockerfile
    ports:
    - '$CLIENT_PORT:8080'
    networks:
      - dev-network
    volumes:
      - './client/public:/public'

networks:
  dev-network:
    driver: bridge