version: "3.9"

services:

  mariadb:
    container_name: mariadb
    image: mariadb:10.6.4-focal
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: Newspaper5
    volumes:
      - './db/MariaDB_data/:/var/lib/mysql/'
      - ./db/privileges.sql:/docker-entrypoint-initdb.d/0_init.sql
    ports:
      - 3306:3306
    networks:
      mrp:
        ipv4_address: 172.10.10.2
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "172.10.10.2", "--port", "3306", "-pNewspaper5"]
      interval: 30s
      timeout: 10s
      retries: 5

  init_db:
    container_name: init_db
    environment:
      DB_USERNAME: client
      DB_PASSWORD: ClientPassword!5
      DB_HOSTNAME: '172.10.10.2'
      DB_PORT: '3306'
    restart: "no"
    volumes:
        - './init_db:/init_db'
    build:
      context: .
      dockerfile: init_db/Dockerfile
    networks:
      - mrp
    depends_on:
      mariadb:
        condition: service_healthy
    tty: true

  server:
    restart: unless-stopped
    environment:
      DB_USERNAME: client
      DB_PASSWORD: ClientPassword!5
      DB_HOSTNAME: '172.10.10.2'
      DB_PORT: '3306'
    build:
      context: .
      dockerfile: server/Dockerfile
    volumes:
        - './client/public:/client/public'
    ports:
      - "5000"
    networks:
      - mrp
    depends_on:
      init_db:
        condition: service_completed_successfully
    tty: true

  #Nginx Service
  server-loadbalance:
    container_name: server_loadbalance
    image: nginx:latest
    restart: always
    volumes:
     - ./server/nginx.conf:/etc/nginx/nginx.conf:ro
     - './client/public:/public'
    depends_on:
      - server
    ports:
     - "5000:5000"
    networks:
      - mrp
    tty: true

  #Nginx Service
  client:
    stdin_open: true
    restart: always
    container_name: client
    build:
      context: .
      dockerfile: client/Dockerfile
    volumes:
      - ./client
      - './client/public:/public'
      - '.client/nginx.conf:/etc/nginx/nginx.conf:ro'
    networks:
      - mrp
    depends_on:
      - server-loadbalance
    ports:
      - "3000:3000"
    tty: true

  # Redis - Key-value Store
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass RedisPassword --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    networks:
        - mrp
    volumes:
      - ./redis/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  #Nginx Service
  web-server:
    container_name: web_server
    depends_on:
      - client
    image: nginx:latest
    volumes:
     - ./webserver/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
    tty: true
    ports:
      - "80:80"
    networks:
      - mrp

networks:
  mrp:
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.10.0/24
          gateway: 172.10.10.1