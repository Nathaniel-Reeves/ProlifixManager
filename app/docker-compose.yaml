version: "3.9"

services:

  mariadb:
    container_name: mariadb
    build:
      context: .
      dockerfile: db/Dockerfile
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_ROOT_HOST: '%'
      TZ: "UTC"
    volumes:
      - /var/lib/mysql/:/var/lib/mysql/
      - ./db:/docker-entrypoint-initdb.d
      - ./.env:/.env
    ports:
      - 3306:3306
    networks:
      mrp:
        ipv4_address: 172.10.0.2
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "172.10.0.2", "--port", "3306", "-p${MARIADB_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 5

  configure_maridb:
    container_name: configure_mariadb
    image: ubuntu
    env_file:
      - .env
    restart: "no"
    volumes:
      - ./db/configure_mariadb.sh:/configure_mariadb.sh
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./.env:/.env
      - /var/lib/mysql/:/var/lib/mysql/
    command: ./configure_mariadb.sh
    networks:
      - mrp
    depends_on:
      mariadb:
        condition: service_healthy
    tty: true

  api:
    restart: unless-stopped
    env_file:
      - .env
    build:
      context: .
      dockerfile: api/Dockerfile
    volumes:
        - ./client/public:/api/client/public
        - ${UPLOAD_FOLDER}:${UPLOAD_FOLDER}
    ports:
      - "5000"
    networks:
      - mrp
    tty: true

  # Nginx Service
  client:
    stdin_open: true
    restart: always
    container_name: client
    build:
      context: .
      dockerfile: client/Dockerfile
    volumes:
        - './db/files:/db/files'
        - ./client/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./ssl:/etc/ssl/
    networks:
      mrp:
        ipv4_address: 172.10.0.5
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    tty: true

  # Redis - Key-value Store
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    env_file:
      - .env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    networks:
      mrp:
        ipv4_address: 172.10.0.3
    volumes:
      - ./redis/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

networks:
  mrp:
    driver: bridge
    ipam:
      config:
        - subnet: 172.10.0.0/16
          ip_range: 172.10.1.0/26
          gateway: 172.10.0.1